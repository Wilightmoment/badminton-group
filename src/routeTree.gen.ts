/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as MembersRouteImport } from './routes/members'
import { Route as R404RouteImport } from './routes/404'
import { Route as IndexRouteImport } from './routes/index'
import { Route as CourtsIndexRouteImport } from './routes/courts/index'
import { Route as CourtsDetailRouteImport } from './routes/courts/detail'

const MembersRoute = MembersRouteImport.update({
  id: '/members',
  path: '/members',
  getParentRoute: () => rootRouteImport,
} as any)
const R404Route = R404RouteImport.update({
  id: '/404',
  path: '/404',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const CourtsIndexRoute = CourtsIndexRouteImport.update({
  id: '/courts/',
  path: '/courts/',
  getParentRoute: () => rootRouteImport,
} as any)
const CourtsDetailRoute = CourtsDetailRouteImport.update({
  id: '/courts/detail',
  path: '/courts/detail',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/404': typeof R404Route
  '/members': typeof MembersRoute
  '/courts/detail': typeof CourtsDetailRoute
  '/courts': typeof CourtsIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/404': typeof R404Route
  '/members': typeof MembersRoute
  '/courts/detail': typeof CourtsDetailRoute
  '/courts': typeof CourtsIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/404': typeof R404Route
  '/members': typeof MembersRoute
  '/courts/detail': typeof CourtsDetailRoute
  '/courts/': typeof CourtsIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/404' | '/members' | '/courts/detail' | '/courts'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/404' | '/members' | '/courts/detail' | '/courts'
  id: '__root__' | '/' | '/404' | '/members' | '/courts/detail' | '/courts/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  R404Route: typeof R404Route
  MembersRoute: typeof MembersRoute
  CourtsDetailRoute: typeof CourtsDetailRoute
  CourtsIndexRoute: typeof CourtsIndexRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/members': {
      id: '/members'
      path: '/members'
      fullPath: '/members'
      preLoaderRoute: typeof MembersRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/404': {
      id: '/404'
      path: '/404'
      fullPath: '/404'
      preLoaderRoute: typeof R404RouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/courts/': {
      id: '/courts/'
      path: '/courts'
      fullPath: '/courts'
      preLoaderRoute: typeof CourtsIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/courts/detail': {
      id: '/courts/detail'
      path: '/courts/detail'
      fullPath: '/courts/detail'
      preLoaderRoute: typeof CourtsDetailRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  R404Route: R404Route,
  MembersRoute: MembersRoute,
  CourtsDetailRoute: CourtsDetailRoute,
  CourtsIndexRoute: CourtsIndexRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
